package JMRVideoExtension.iu;

import java.io.File;
import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;
import uk.co.caprica.vlcj.player.MediaPlayerEventListener;
import uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer;

/**
 *
 * @author David Martinez Domingo
 */

public class InternalWindowVideo extends javax.swing.JInternalFrame {

    /**
     * Media player
     */
    private EmbeddedMediaPlayer vlcplayer = null;
    
    /**
     * Video
     */
    private File video;
    
    

    public InternalWindowVideo(File f) {
        initComponents();
        video = f;
        
        EmbeddedMediaPlayerComponent aVisual = new EmbeddedMediaPlayerComponent();
        getContentPane().add(aVisual,java.awt.BorderLayout.CENTER); 
        vlcplayer = aVisual.getMediaPlayer();
    }
    
   
  
    /**
     * Get the internal video window associated with the video
     * @return  Player
     */
    public static InternalWindowVideo getInstance(File f){
        InternalWindowVideo v = new InternalWindowVideo(f);
        return (v.vlcplayer!=null?v:null); 
    }

 
    public Canvas getCanvas() {
        return canvas2;
    }


    public void setCanvas(Canvas canv) {
        this.canvas2 = canv;
    }
    

    public File getVideo() {
        return video;
    }


    public void setVideo(File video) {
        this.video = video;
    }
    

    public EmbeddedMediaPlayer getMediaPlayer() {
        return vlcplayer;
    }

    /**
     * The video starts playing
     */
    public void play() {
        if (vlcplayer != null) {
            if(vlcplayer.isPlayable()){
                vlcplayer.mute(true);
                vlcplayer.play();
            } else {
                vlcplayer.playMedia(video.getAbsolutePath());
            }
        } 
    }
    
    /**
     * Video playback stops
     */
    public void stop() {
        if (vlcplayer != null) {
            if (vlcplayer.isPlaying()) {
                vlcplayer.pause();
            } else {
                vlcplayer.stop();
            }
        } 
    }
    
    
    /**
     * Add a Listener to the media player
     * @param ml 
     */
    public void addMediaPlayerEventListener(MediaPlayerEventListener ml) {
        if (vlcplayer != null) {
            vlcplayer.addMediaPlayerEventListener(ml);
        }
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        canvas2 = new JMRVideoExtension.iu.Canvas();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        javax.swing.GroupLayout canvas2Layout = new javax.swing.GroupLayout(canvas2);
        canvas2.setLayout(canvas2Layout);
        canvas2Layout.setHorizontalGroup(
            canvas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        canvas2Layout.setVerticalGroup(
            canvas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(canvas2);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JMRVideoExtension.iu.Canvas canvas2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
